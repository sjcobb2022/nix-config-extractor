# A workflow that is only triggered by a REST API endpoint
# It must contain an input including a git URL

name: extract

on:
  workflow_dispatch:
    inputs:
      url:
        description: "The URL of the git repository to extract the Home Manager configuration from. E.g. github:sjcobb2022/nixos-config"
        required: true
      flake:
        description: "The flake to extract from the repository. E.g. sjcobb@slaptop"
        required: true

jobs:
  extract:
    runs-on: ubuntu-latest
    steps:
      - name: Install nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Cache build artifacts
        uses: DeterminateSystems/magic-nix-cache-action@main
      
      - name: Declare Variables
        run: |
          echo "sha=$(nix flake metadata ${{ github.event.inputs.url }} --json | jq -r '.locked.rev')" >> $GITHUB_ENV
          echo "url=$(echo ${{ github.event.inputs.url }} | tr '[":<>|*?\r\\/]' '-')" >> $GITHUB_ENV

      uses: xSAVIKx/artifact-exists-action@v0
      id: check_artifact_exists
      with:
        name: nix-${{ env.url }}-${{ env.sha }}

      - name: Home Manager Build
        if: ${{ steps.check_artifact_exists.outputs.exists != 'true' && steps.cache-nix.outputs.cache-hit != 'true' }}
        run: nix-shell -p home-manager --run "home-manager build --flake ${{ github.event.inputs.url }}#${{ github.event.inputs.flake }} --option 'home.packages' 'mkForce []' "

      - name: Upload Artifacts
        if: ${{ steps.check_artifact_exists.outputs.exists != 'true' && steps.cache-nix.outputs.cache-hit != 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: nix-${{ env.url }}-${{ env.sha }}
          path: ./result/home-files/.config
